// Generated by CoffeeScript 1.7.1
(function() {
  var $, app,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $ = window.jQuery;

  app = window.gifDropAdmin = {
    views: [],
    add: function(select) {
      return select.clone().appendTo(app.selections);
    },
    init: function() {
      app.pages = new app.Pages(_.map(app.pageIds, function(id) {
        return {
          id: parseInt(id, 10)
        };
      }));
      app.views.pages = new app.PagesView({
        collection: app.pages
      });
      app.views.pages.init();
      return $('.gifdrop-add-page input').click(function(e) {
        var select;
        e.preventDefault();
        select = $(this).siblings('select');
        if (select.val()) {
          return app.pages.add({
            id: parseInt(select.val(), 10)
          });
        }
      });
    }
  };

  app.Page = (function(_super) {
    __extends(Page, _super);

    function Page() {
      return Page.__super__.constructor.apply(this, arguments);
    }

    return Page;

  })(Backbone.Model);

  app.Pages = (function(_super) {
    __extends(Pages, _super);

    function Pages() {
      return Pages.__super__.constructor.apply(this, arguments);
    }

    Pages.prototype.model = app.Page;

    Pages.prototype.initialize = function() {
      return this.listenTo(this, 'userRemove', this.remove);
    };

    return Pages;

  })(Backbone.Collection);

  app.PagesView = (function(_super) {
    __extends(PagesView, _super);

    function PagesView() {
      return PagesView.__super__.constructor.apply(this, arguments);
    }

    PagesView.prototype.className = 'gifdrop-selections';

    PagesView.prototype.initialize = function() {
      return this.listenTo(this.collection, 'add', this.addView);
    };

    PagesView.prototype.addView = function(model) {
      return this.views.add(new app.PageView({
        model: model
      }));
    };

    PagesView.prototype.init = function() {
      this.setSubviews();
      this.render();
      $('.gifdrop-selections-wrap').html(this.el);
      return this.views.ready();
    };

    PagesView.prototype.setSubviews = function() {
      var model, _i, _len, _ref, _results;
      if (!this.views.length) {
        this.views.add(new app.PagesViewExtras);
        _ref = this.collection.models;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          model = _ref[_i];
          _results.push(this.views.add(new app.PageView({
            model: model
          })));
        }
        return _results;
      }
    };

    return PagesView;

  })(wp.Backbone.View);

  app.PagesViewExtras = (function(_super) {
    __extends(PagesViewExtras, _super);

    function PagesViewExtras() {
      return PagesViewExtras.__super__.constructor.apply(this, arguments);
    }

    PagesViewExtras.prototype.template = wp.template('gifdrop-pages-extras');

    return PagesViewExtras;

  })(wp.Backbone.View);

  app.PageView = (function(_super) {
    __extends(PageView, _super);

    function PageView() {
      return PageView.__super__.constructor.apply(this, arguments);
    }

    PageView.prototype.template = wp.template('gifdrop-page');

    PageView.prototype.className = 'gifdrop-selection';

    PageView.prototype.events = {
      'click input': 'userRemove'
    };

    PageView.prototype.initialize = function() {
      return this.listenTo(this.model, 'remove', this.remove);
    };

    PageView.prototype.userRemove = function(e) {
      e.preventDefault();
      return this.model.trigger('userRemove', this.model);
    };

    PageView.prototype.ready = function() {
      return this.$('select').val(this.model.id);
    };

    return PageView;

  })(wp.Backbone.View);

  $(function() {
    return app.init();
  });

}).call(this);
